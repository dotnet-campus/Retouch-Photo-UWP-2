<UserControl
    x:Class="Retouch_Photo2.Blends.TagTypeControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Height="40"
    d:DesignHeight="50"
    d:DesignWidth="200"
    >

    <UserControl.Resources>
        <!--Style-->
        <Style x:Name="RadioButtonStyle" TargetType="RadioButton">
            <Setter Property="BorderBrush" Value="{ThemeResource AppStroke}" />
            <Setter Property="Background" Value="DodgerBlue" />
            <Setter Property="Foreground" Value="{ThemeResource RadioButtonForeground}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="30" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid x:Name="RootGrid" Background="Transparent">

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />

                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckOuterEllipse" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonOuterEllipseStrokeDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="OuterEllipse" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>

                            <Ellipse x:Name="OuterEllipse" Width="26" Height="26" Opacity="0" UseLayoutRounding="False"
                                                 StrokeThickness="1" Stroke="{TemplateBinding Foreground}" />
                            <Ellipse x:Name="CheckOuterEllipse" Width="26" Height="26" Opacity="0"
                                                 UseLayoutRounding="False" StrokeThickness="1" Stroke="{TemplateBinding Foreground}" />
                            <Ellipse x:Name="CheckGlyph" Width="16" Height="16" UseLayoutRounding="False" 
                                                 StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" />

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Grid Padding="4,0">
        
        <!--VisualState-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">

                <!--Normal-->
                <VisualState x:Name="Normal"/>

                <!--None-->
                <VisualState x:Name="None">
                    <VisualState.Setters>
                        <Setter Target = "NoneButton.IsChecked" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <!--Red-->
                <VisualState x:Name="Red">
                    <VisualState.Setters>
                        <Setter Target = "RedButton.IsChecked" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <!--Orange-->
                <VisualState x:Name="Orange">
                    <VisualState.Setters>
                        <Setter Target = "OrangeButton.IsChecked" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <!--Yellow-->
                <VisualState x:Name="Yellow">
                    <VisualState.Setters>
                        <Setter Target = "YellowButton.IsChecked" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <!--Green-->
                <VisualState x:Name="Green">
                    <VisualState.Setters>
                        <Setter Target = "GreenButton.IsChecked" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <!--Blue-->
                <VisualState x:Name="Blue">
                    <VisualState.Setters>
                        <Setter Target = "BlueButton.IsChecked" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <!--Purple-->
                <VisualState x:Name="Purple">
                    <VisualState.Setters>
                        <Setter Target = "PurpleButton.IsChecked" Value="True"/>
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        
        <RadioButton x:Name="NoneButton" Grid.Column="0" Style="{StaticResource RadioButtonStyle}"/>
        <RadioButton x:Name="RedButton" Grid.Column="1" Style="{StaticResource RadioButtonStyle}"/>
        <RadioButton x:Name="OrangeButton" Grid.Column="2" Style="{StaticResource RadioButtonStyle}"/>
        <RadioButton x:Name="YellowButton" Grid.Column="3" Style="{StaticResource RadioButtonStyle}"/>
        <RadioButton x:Name="GreenButton" Grid.Column="4" Style="{StaticResource RadioButtonStyle}"/>
        <RadioButton x:Name="BlueButton" Grid.Column="5" Style="{StaticResource RadioButtonStyle}"/>
        <RadioButton x:Name="PurpleButton" Grid.Column="6" Style="{StaticResource RadioButtonStyle}"/>
   
    </Grid>

</UserControl>