<Page
    x:Class="Retouch_Photo2.Pages.DrawPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Retouch_Photo2.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    
    xmlns:elements="using:Retouch_Photo2.Elements"
    xmlns:controls="using:Retouch_Photo2.Controls"
    xmlns:hsvColorPicker="using:HSVColorPickers"
    
 xmlns:toolkitControls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    
    xmlns:operate="using:Retouch_Photo2.Operates"
    xmlns:adjustments="using:Retouch_Photo2.Adjustments"
    xmlns:effects="using:Retouch_Photo2.Effects"
    xmlns:transformers="using:FanKit.Transformers"
    xmlns:layers="using:Retouch_Photo2.Layers"
    xmlns:selection="using:Retouch_Photo2.Selections"
    xmlns:controls1="using:Retouch_Photo2.Brushs.Controls"
    NavigationCacheMode="Enabled"    
    mc:Ignorable="d"
    >
    

    <Grid >

        <local:DrawLayout x:Name="DrawLayout" 
                          IsFullScreen="{x:Bind KeyboardViewModel.IsFullScreen,Mode=OneWay}" 
                          Tool="{x:Bind TipViewModel.Tool,Mode=OneWay}"
                          Theme="{x:Bind ViewModel.CanvasTheme,Mode=OneWay}"
                          >

            <!--Tool & Layer-->
            <local:DrawLayout.LeftPane>
                <controls:ToolsControl/>
            </local:DrawLayout.LeftPane>
            <local:DrawLayout.RightPane>
                <controls:LayersControl x:Name="LayersControl"/>
            </local:DrawLayout.RightPane>

            <!--Canvas & Back-->
            <local:DrawLayout.CenterContent>                
                <controls:MainCanvasControl 
                    AccentColor="{ThemeResource SystemAccentColor}" 
                    ShadowColor="{ThemeResource AppStrokeColor}" 
                    RulerVisible="{x:Bind ViewModel.CanvasRulerVisible,Mode=OneWay}"
                    />
            </local:DrawLayout.CenterContent>
            <local:DrawLayout.TopLeftPane>
                <Button x:Name="BackButton" BorderThickness="0" BorderBrush="Transparent" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <FontIcon Glyph="&#xE0D5;" FontSize="20" FontFamily="{ThemeResource SymbolThemeFontFamily}" />
                </Button>                        
            </local:DrawLayout.TopLeftPane>

            <!--Left & Right-->
            <local:DrawLayout.TopLeftStackBar>
                <StackPanel Orientation="Horizontal">
                    <Border Style="{StaticResource AppCircleBorderStyle}">
                        <Button x:Name="SaveButton" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="&#xE105;" FontSize="20" Foreground="{ThemeResource AppText}" FontFamily="{ThemeResource SymbolThemeFontFamily}" BorderThickness="0" Background="Transparent" />
                    </Border>
                    <ContentControl Width="6"/>
                    <Border Style="{StaticResource AppCircleBorderStyle}">
                        <Button IsEnabled="True" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="&#xE10E;" FontSize="18" Foreground="{ThemeResource AppText}" FontFamily="{ThemeResource SymbolThemeFontFamily}" BorderThickness="0" Background="Transparent" />
                    </Border>
                    <ContentControl Width="6"/>
                    <Border Style="{StaticResource AppCircleBorderStyle}">
                        <Button IsEnabled="True" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="&#xE10D;" FontSize="18" Foreground="{ThemeResource AppText}" FontFamily="{ThemeResource SymbolThemeFontFamily}" BorderThickness="0" Background="Transparent" />
                    </Border>
                    
                    <AppBarSeparator/>
                    
                    <Border Style="{StaticResource AppCircleBorderStyle}">
                        <elements:ThemeControl x:Name="ThemeControl" 
                                               Theme="{x:Bind ViewModel.CanvasTheme,Mode=TwoWay}" 
                                               TitleBarColor="{ThemeResource AppForegroundColor}"
                                               />
                    </Border>
                    <ContentControl Width="6"/>
                    <Border Style="{StaticResource AppCircleBorderStyle}">
                        <ToggleButton Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="&#xE80A;" FontSize="18" Foreground="{ThemeResource AppText}" FontFamily="{ThemeResource SymbolThemeFontFamily}" BorderThickness="0" Background="Transparent" 
                            IsChecked="{x:Bind ViewModel.CanvasRulerVisible,Mode=TwoWay}"                             
                            />
                    </Border>
                    <ContentControl Width="6"/>
                    <Border Style="{StaticResource AppCircleBorderStyle}">
                        <elements:RepeatControl 
                            IsChecked="{x:Bind TipViewModel.IsOpen,Mode=TwoWay}"
                            />
                    </Border>
                </StackPanel>
            </local:DrawLayout.TopLeftStackBar>
            <local:DrawLayout.TopRightPane>
                <StackPanel Orientation="Horizontal">

                    <!--Debug-->
                    <elements:MenuLayoutButton x:Name="DebugMenuLayoutButton" 
                                               State="{x:Bind TipViewModel.DebugMenuLayoutState,Mode=TwoWay}">
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Debug" Placement="Bottom"  Style="{StaticResource AppToolTip}"
                                     IsOpen="{x:Bind TipViewModel.IsOpen,Mode=OneWay}"
                                     />
                        </ToolTipService.ToolTip>
                        <elements:MenuLayoutButton.CenterContent>
                            <FontIcon FontSize="24" Glyph="&#x1F41E;" FontFamily="Segoe UI Symbol"/>
                        </elements:MenuLayoutButton.CenterContent>
                    </elements:MenuLayoutButton>

                    <!--Selection-->
                    <elements:MenuLayoutButton x:Name="SelectionMenuLayoutButton" 
                                               State="{x:Bind TipViewModel.SelectionMenuLayoutState,Mode=TwoWay}">
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Selection" Placement="Bottom" Style="{StaticResource AppToolTip}"
                                     IsOpen="{x:Bind TipViewModel.IsOpen,Mode=OneWay}" />
                        </ToolTipService.ToolTip>
                        <elements:MenuLayoutButton.CenterContent>
                            <selection:Icon/>
                        </elements:MenuLayoutButton.CenterContent>
                    </elements:MenuLayoutButton>

                    <!--Operate-->
                    <elements:MenuLayoutButton x:Name="OperateMenuLayoutButton" 
                                               State="{x:Bind TipViewModel.OperateMenuLayoutState,Mode=TwoWay}">
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Operate" Placement="Bottom" Style="{StaticResource AppToolTip}"
                                     IsOpen="{x:Bind TipViewModel.IsOpen,Mode=OneWay}" />
                        </ToolTipService.ToolTip>
                        <elements:MenuLayoutButton.CenterContent>
                            <operate:Icon/>
                        </elements:MenuLayoutButton.CenterContent>
                    </elements:MenuLayoutButton>

                    <!--Adjustment-->
                    <elements:MenuLayoutButton x:Name="AdjustmentMenuLayoutButton" 
                                               State="{x:Bind TipViewModel.AdjustmentMenuLayoutState,Mode=TwoWay}">
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Adjustment" Placement="Bottom" Style="{StaticResource AppToolTip}"
                                     IsOpen="{x:Bind TipViewModel.IsOpen,Mode=OneWay}" />
                        </ToolTipService.ToolTip>
                        <elements:MenuLayoutButton.CenterContent>
                            <adjustments:Icon/>
                        </elements:MenuLayoutButton.CenterContent>
                    </elements:MenuLayoutButton>

                    <!--Effect-->
                    <elements:MenuLayoutButton x:Name="EffectMenuLayoutButton" 
                                               State="{x:Bind TipViewModel.EffectMenuLayoutState,Mode=TwoWay}">
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Effect" Placement="Bottom" Style="{StaticResource AppToolTip}"
                                     IsOpen="{x:Bind TipViewModel.IsOpen,Mode=OneWay}" />
                        </ToolTipService.ToolTip>
                        <elements:MenuLayoutButton.CenterContent>
                            <effects:Icon/>
                        </elements:MenuLayoutButton.CenterContent>
                    </elements:MenuLayoutButton>

                    <!--Transformer-->
                    <elements:MenuLayoutButton x:Name="TransformerMenuLayoutButton" 
                                               State="{x:Bind TipViewModel.TransformerMenuLayoutState,Mode=TwoWay}">
                        <ToolTipService.ToolTip>
                            <ToolTip Content="Transformer" Placement="Bottom" Style="{StaticResource AppToolTip}"
                                     IsOpen="{x:Bind TipViewModel.IsOpen,Mode=OneWay}"/>
                        </ToolTipService.ToolTip>
                        <elements:MenuLayoutButton.CenterContent>
                            <transformers:Icon/>
                        </elements:MenuLayoutButton.CenterContent>
                    </elements:MenuLayoutButton>

                    <AppBarSeparator/>

                    <!--Color-->
                    <Grid x:Name="ColorButton" Width="60" Background="Transparent">
                        <Ellipse Width="38" Height="38" StrokeThickness="1" Stroke="{ThemeResource AppText}" VerticalAlignment="Center">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="ms-appx:///Icons\GrayAndWhite.jpg"/>
                            </Ellipse.Fill>
                        </Ellipse>

                        <Ellipse Width="36" Height="36">
                            <Ellipse.Fill>
                                <SolidColorBrush 
                                    Color="{x:Bind SelectionViewModel.Color,Mode=OneWay}"
                                    />
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>

                </StackPanel>
            </local:DrawLayout.TopRightPane>

        </local:DrawLayout>


        <!--MenuLayout-->
        <Canvas
            IsHitTestVisible="{x:Bind ViewModel.CanvasHitTestVisible,Mode=OneWay}">

            <!--Debug-->
            <elements:MenuLayout Text="Debug" Placement="Bottom"
                                 State="{x:Bind TipViewModel.DebugMenuLayoutState,Mode=TwoWay}" 
                                 PlacementTarget="{x:Bind DebugMenuLayoutButton}">
                <elements:MenuLayout.ContentChild>
                    <controls:DebugControl/>
                </elements:MenuLayout.ContentChild>
                <elements:MenuLayout.Icon>
                    <FontIcon FontSize="24" Glyph="&#x1F41E;" FontFamily="Segoe UI Symbol"/>
                </elements:MenuLayout.Icon>
            </elements:MenuLayout>

            <!--Selection-->
            <elements:MenuLayout x:Name="SelectionMenuLayout" Text="Selection" Placement="Bottom" 
                                 State="{x:Bind TipViewModel.SelectionMenuLayoutState,Mode=TwoWay}" 
                                 PlacementTarget="{x:Bind SelectionMenuLayoutButton}">
                <elements:MenuLayout.ContentChild>
                    <controls:SelectionControl
                       Mode="{x:Bind SelectionViewModel.Mode,Mode=OneWay}"/>
                </elements:MenuLayout.ContentChild>
                <elements:MenuLayout.Icon>
                    <selection:Icon/>
                </elements:MenuLayout.Icon>
            </elements:MenuLayout>

            <!--Operate-->
            <elements:MenuLayout x:Name="OperateMenuLayout" Text="Operate" Placement="Bottom" 
                                 State="{x:Bind TipViewModel.OperateMenuLayoutState,Mode=TwoWay}" 
                                 PlacementTarget="{x:Bind OperateMenuLayoutButton}">
                <elements:MenuLayout.ContentChild>
                    <controls:OperateControl 
                        Mode="{x:Bind SelectionViewModel.Mode,Mode=OneWay}"/>
                </elements:MenuLayout.ContentChild>
                <elements:MenuLayout.Icon>
                    <operate:Icon/>
                </elements:MenuLayout.Icon>
            </elements:MenuLayout>

            <!--Adjustment-->
            <elements:MenuLayout x:Name="AdjustmentMenuLayout" Text="Adjustment" Placement="Bottom" 
                                 State="{x:Bind TipViewModel.AdjustmentMenuLayoutState,Mode=TwoWay}" 
                                 PlacementTarget="{x:Bind AdjustmentMenuLayoutButton}">
                <elements:MenuLayout.ContentChild>
                    <controls:AdjustmentControl 
                        AdjustmentManager="{x:Bind SelectionViewModel.AdjustmentManager,Mode=OneWay}"/>
                </elements:MenuLayout.ContentChild>
                <elements:MenuLayout.Icon>
                    <adjustments:Icon/>
                </elements:MenuLayout.Icon>
            </elements:MenuLayout>

            <!--Effect-->
            <elements:MenuLayout x:Name="EffectMenuLayout" Text="Effect" Placement="Bottom" 
                                 State="{x:Bind TipViewModel.EffectMenuLayoutState,Mode=TwoWay}" 
                                 PlacementTarget="{x:Bind EffectMenuLayoutButton}">
                <elements:MenuLayout.ContentChild>
                    <controls:EffectControl 
                        EffectManager="{x:Bind SelectionViewModel.EffectManager,Mode=OneWay}"/>
                </elements:MenuLayout.ContentChild>
                <elements:MenuLayout.Icon>
                    <effects:Icon/>
                </elements:MenuLayout.Icon>
            </elements:MenuLayout>

            <!--Transformer-->
            <elements:MenuLayout x:Name="TransformerMenuLayout" Text="Transformer" Placement="Bottom" 
                                 State="{x:Bind TipViewModel.TransformerMenuLayoutState,Mode=TwoWay}" 
                                 PlacementTarget="{x:Bind TransformerMenuLayoutButton}">
                <elements:MenuLayout.ContentChild>
                    <controls:TransformerControl 
                           Tool="{x:Bind TipViewModel.Tool,Mode=OneWay}"
                           DisabledRadian="{x:Bind SelectionViewModel.DsabledRadian,Mode=OneWay}"
                           Mode="{x:Bind SelectionViewModel.Mode,Mode=OneWay}"
                           Transformer="{x:Bind SelectionViewModel.Transformer,Mode=OneWay}" 
                        />
                </elements:MenuLayout.ContentChild>
                <elements:MenuLayout.Icon>
                    <transformers:Icon/>
                </elements:MenuLayout.Icon>
            </elements:MenuLayout>

            <!--Layer-->
            <elements:MenuLayout x:Name="LayerMenuLayout" Text="Layer" Placement="Left" 
                                 State="{x:Bind TipViewModel.LayerMenuLayoutState,Mode=TwoWay}" 
                                 PlacementTarget="{x:Bind LayersControl}">
                <elements:MenuLayout.ContentChild>
                    <controls:LayerControl 
                        Mode="{x:Bind SelectionViewModel.Mode,Mode=OneWay}"/>
                </elements:MenuLayout.ContentChild>
                <elements:MenuLayout.Icon>
                    <layers:Icon/>
                </elements:MenuLayout.Icon>
            </elements:MenuLayout>

            <!--Color-->
            <elements:MenuLayout x:Name="ColorMenuLayout" Text="Color" Placement="Bottom"
                                 State="{x:Bind TipViewModel.ColorMenuLayoutState,Mode=TwoWay}" 
                                 PlacementTarget="{x:Bind ColorButton}">
                <elements:MenuLayout.Icon>
                    <Ellipse Width="20" Height="20" Fill="Gray" />
                </elements:MenuLayout.Icon>
                <elements:MenuLayout.ContentChild>
                    <hsvColorPicker:ColorPicker x:Name="ColorPicker" Width="Auto" 
                                                Color="{x:Bind SelectionViewModel.Color,Mode=OneWay}"/>
                </elements:MenuLayout.ContentChild>
            </elements:MenuLayout>
            
        </Canvas>
        
        
        <!--Load-->
        <elements:LoadingControl x:Name="LoadingControl" Text="Saving..."/>


        <!--Tip-->
        <ContentControl Grid.Row="1" IsHitTestVisible="False" Margin="60" HorizontalAlignment="Center">
            <ToolTip Style="{StaticResource AppToolTip}">
                <TextBlock 
                    Text="{x:Bind ViewModel.Text, Mode=OneWay}"
                    />
            </ToolTip>
        </ContentControl>

    </Grid>
</Page>